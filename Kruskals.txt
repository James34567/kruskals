Kruskals
import java.util.Scanner;
class kruskals {
 static int arr[][] = new int[20][20];
 static int n;
 static Scanner sc = new Scanner(System.in);
 public static void main(String args[]) {
 printsolution();
 krus();
 }
 static void printsolution() {
 System.out.println("Enter the number of nodes");
 n = sc.nextInt();
 System.out.println("Enter the adjacency Matrix");
 for (int i = 1; i <= n; i++) {
 for (int j = 1; j <= n; j++) {
 arr[i][j] = sc.nextInt();
 if (arr[i][j] == 0) {
 arr[i][j] = 999;
 }
 }
 }
 }
 static void krus() {
 int visited[] = new int[20];
 int ne = 1, i, j, min = 999, a = 0, b = 0, u = 0, v = 0;
 int mincost = 0;
 for (i = 1; i <= n; i++) {
 visited[i] = 0;
 }
 while (ne < n) {
 for (i = 1, min = 999; i <= n; i++) {
 for (j = 1; j <= n; j++) {
 if (arr[i][j] < min) {
 min = arr[i][j];
 a = u = i;
 b = v = j;
 }
 }
 }
 while (visited[u] != 0) {
 u = visited[u];
 }
 while (visited[v] != 0) {
 v = visited[v];
 }
 if (u != v) {
 System.out.println("Edge " + ne++ + " (" + a + "," + b + ") cost: " + min);
 mincost += min;
 visited[v] = u;
 }
 arr[a][b] = arr[b][a] = 999;
 }
 System.out.println("The Minimum cost is " + mincost);
 }
}